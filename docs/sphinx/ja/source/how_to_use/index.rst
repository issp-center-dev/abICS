.. _sec_basic_usage:

***************************
基本的な使用方法
***************************

.. highlight:: none


abICSでは, モンテカルロステップ毎に位置座標を更新しながら、ソルバー(VASP, QEなど)によるエネルギー計算などを行います.
そのため、位置座標以外の情報について予め用意する必要があります。これらの情報は、ソルバーの入力形式に従ったファイルを参照し取得します。

.. _subsec_basic_reference:

参照ファイルの準備
-----------------------

使用するソルバーの入力形式に従った入力ファイルを用意します。
参照ファイルのパスはabICSの入力ファイルにある ``[solver]`` セクションの ``base_input_dir`` で指定します。
座標情報については、abICSの入力ファイルを参照するため、記載する必要はありません。
以下、QEの参照ファイルの例について記載します。

.. literalinclude::  ../../../../../examples/standard/spinel/baseinput/scf.in

.. _subsec_basic_input:

		     
入力ファイルの作成
-----------------------

次にabICSの入力ファイルを作成します。
abICSの入力ファイルは, 以下の5つのセクションから構成されます.

1. [sampling] セクション

   レプリカ数や温度の幅, モンテカルロステップ数など,レプリカ交換モンテカルロ部分のパラメータを指定します.また、利用するソルバーの種類 (VASP, QE, ...)、ソルバーへのパス、不変な入力ファイルのあるディレクトリなど（第一原理計算）ソルバーのパラメータを指定します.

2. [mlref] セクション

   ニューラルネットワークモデルの精度評価と訓練データの拡張などを行うため、サンプリングの結果から原子配置のみを取り出す際のオプションを設定します. ``abics_mlref`` のみで使用されます. また、訓練データを作成するために利用するソルバーの種類 (VASP, QE, ...)、ソルバーへのパス、不変な入力ファイルのあるディレクトリなど（第一原理計算）ソルバーのパラメータを指定します.

3. [train] セクション

   訓練データから配置エネルギー予測モデルを学習する学習器の設定を行います. ``abics_train`` のみで使用されます.

4. [observer] セクション

   取得する物理量の種類などを指定します.

5. [config] セクション

   合金の配位などを指定します.

これらの詳細については :doc:`../inputfiles/index` をご覧ください。
以下、QEの場合の入力ファイルの例を記載します。

.. literalinclude::  ../../../../../examples/standard/spinel/input_qe.toml


abICSの実行
-------------------

MPI 実行時に指定するプロセス数はレプリカ数以上である必要があります。

::

 $ mpiexec -np 2 abics_sampling input.toml

実行すると、カレントディレクトリ以下にレプリカ番号を名前にもつディレクトリが作られ、各レプリカはその中でソルバーを実行します。
ここで、 ``input.toml`` はabICS用の入力ファイルです( :ref:`subsec_basic_input` 参照)。

MPI プロセス数に関する Tips
============================
abICS はVASP, OpenMX, QuantumESPRESSOをソルバーとして実行する場合、 ``MPI_Comm_spawn`` という MPI ライブラリ関数を使用します。
この関数は新規に MPI プロセスを(複数)起動して、そこで任意プログラムを(並列)実行します。

たとえば、 1ノードあたり 4CPU コアをもつような並列計算機において、 2レプリカの計算を、1つあたり4並列のソルバーで実行する場合を考えます。
``mpiexec -np 2 abics_sampling input.toml`` として実行した場合、ノード 0 の最初の2コアでレプリカ制御プロセス A,B が起動し、それぞれが4並列ソルバー a,b を新規に起動します。
そのとき、ソルバー a はノード 0 の残り2コアとノード 1 の先頭 2コアに、
ソルバー b はノード 1 の残り2コアとノード 2 の先頭 2コアに配置され、ソルバー内でノード間通信が発生し、性能が低下します。

初期プロセスを多めに取ることで、プロセスを整列させ、不要なノードまたぎが起きないようにできます。
今回の例では、 ``mpiexec -np 4 abics_sampling input.toml`` とすることで、
レプリカ制御プロセス A,B の他に何もしないプロセスで ノード0 をすべて埋めることができ、
ソルバー a,b はそれぞれノード1, 2 を埋めることができます。


MPI 実装依存性
=========================
MPI 実装によっては、 ``MPI_Comm_spawn`` 関数で、「合計でいくつのプロセスを起動できるか」 という情報 (``MPI_UNIVERSE_SIZE``) を利用することがあります。
``MPI_UNIVERSE_SIZE`` の設定方法など、 各種MPI 実装に関するTips を紹介します。

OpenMPI
~~~~~~~~~~~~~
使用できるCPU コア数と同じ値が ``MPI_UNIVERSE_SIZE`` として自動で設定されます。
使用プロセス数がこれを超える場合には、 ``--oversubscribe`` オプションを渡す必要があります。

OpenMPI は、 ``MPI_Comm_spawn`` で呼び出したプロセスが非ゼロのリターンコードを返した場合に、すべてのプロセスごと終了します。
リターンコードを無視したい場合は、 ``--mca orte_abort_on_non_zero_status 0`` としてください。
例えばQuantum ESPRESSO は、計算中に浮動小数点数例外を捕捉すると、終了時に非ゼロのリターンコードを返します。

MPICH / Intel MPI
~~~~~~~~~~~~~~~~~~~~~
``-usize <num>`` オプションで ``MPI_UNIVERSE_SIZE`` を指定できます。
実際には指定しなくとも動作するようです。

HPE (SGI) MPT
~~~~~~~~~~~~~~~~~~~
``-up <num>`` オプションで ``MPI_UNIVERSE_SIZE`` を指定できます。
``-np <num>`` オプションよりも先に指定する必要があります。

その他
~~~~~~~~~~
大規模スパコンなどでは、ベンダーがジョブスケジューラとともに専用の MPI 実行スクリプトを用意している場合があります。
その場合は、それぞれのマニュアルを参考にしてください。

例として、 物性研スパコン sekirei, enaga では、 ``mpijob -spawn`` とすることで、 ``MPI_UNIVERSE_SIZE`` が自動的に設定されます。

.. solver_specific_notes:

ソルバー利用時の注意点
----------------------------

abICSでは原子の座標を更新します. それ以外の設定については基本的にソルバーごとに指定する必要があります。ただし、構造最適化をする原子の指定についてはabICS側で制御することが可能です。構造最適化機能を有効にする場合には、ソルバーの参照ファイルで構造最適化オプションを有効にした上で、構造最適化のステップ数なども指定することで最適化が行われます。また、abICSではソルバー毎に、参照ファイル名、実装時に仮定している参照ファイルのルールや、abICS入力ファイルで指定できる実行形式 ``run_scheme`` があります。以下、それらについて説明します。

VASP
=====

- URL : https://www.vasp.at

- 参照ファイル
   
  - INCAR, POTCAR, KPOINTS ファイルを用意してください。

    - POTCARファイルは元素をアルファベット順に並べてください。
    - POSCARファイルは不要ですが、依存パッケージである ``pymatgen`` のバージョンによっては必要になります。その場合、なにか適当なファイルを用意してください。

- abICS 入力ファイル

  - ``run_scheme`` の指定
    
    ``mpi_spawn_ready`` に設定してください。
    なお、VASPをソルバーとして利用する際には、 ``MPI_Comm_spawn`` を利用するためのパッチをあてる必要があります。
    利用されたい場合には、:doc:`../contact/index` のその他に記載された連絡先までご連絡ください。


Quantum Espresso
================

- URL : https://www.quantum-espresso.org

- バージョンは 6.2 以上を利用してください。

  - いわゆる旧形式 XML バージョンは利用できません。

- 参照ファイル
  
  - 参照ファイル名は ``scf.in`` にしてください。
  - ``calculation`` は ``scf`` と ``relax`` のみ対応しています。
  - :math:`\Gamma` 点のみで計算する場合には、 ``kpoints`` を ``Gamma`` に指定すると高速化します。

- abICS 入力ファイル

  - ``run_scheme`` の指定
    
    ``mpi_spawn`` に設定してください。

OpenMX
======

- URL : http://www.openmx-square.org

- バージョンは 3.9 を利用してください。

- 参照ファイル
  
  - 参照ファイル名は ``base.dat`` にしてください。

- abICS 入力ファイル

  - ``run_scheme`` の指定
    
    ``mpi_spawn_wrapper`` に設定してください。


aenet
======

- URL : http://ann.atomistic.net

- バージョン2.0.3 (2018-06-25) で動作確認済。

- 参照ファイル(参照ファイルの具体例についてはチュートリアル参照)
  
  - aenet用の入力ファイルを ``[trainer]`` セクションの ``base_input_dir`` で設定したディレクトリ内の ``generate`` 、 ``train`` 、および ``predict`` ディレクトリに設置してください。

  - aenetでは、訓練用の原子配置とエネルギーのデータを、原子環境記述子とエネルギーの関係に変換した中間バイナリフォーマットにまとめてから訓練を行います。この変換を行う ``generate.x`` 用の 入力ファイルを ``generate`` ディレクトリに設置してください。

  - ``generate.x`` で生成された訓練データを読み込み、訓練を行う ``train.x`` 用の入力ファイルを ``train`` ディレクトリに設置します。 ファイル名は ``train.in`` としてください。
    
  - 訓練したポテンシャルモデルを使って入力座標に対してエネルギーを 評価するための ``predict.x`` 用の入力ファイル ``predict.in`` を、 ``predict`` ディレクトリに設置してください。


- abICS 入力ファイル

  - ``[solver]`` セクションで ``type`` , ``perturb`` , ``run_scheme`` に関しては、能動学習スキームを用いる場合は以下に設定してください。

  .. code-block:: bash  

     type = “aenet”
     perturb = 0.0
     run_scheme = ‘subprocess’

  

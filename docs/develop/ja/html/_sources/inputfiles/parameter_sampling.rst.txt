.. highlight:: none

[sampling] セクション
-------------------------------

レプリカ数や温度の幅, モンテカルロステップ数など,レプリカ交換モンテカルロ部分のパラメータを指定します.
以下のようなファイルフォーマットをしています.

  ::
  
        [sampling]
        nreplicas = 3
        nprocs_per_replica = 1
        kTstart = 500.0
        kTend = 1500.0
        nsteps = 5
        RXtrial_frequency = 2
        sample_frequency = 1
        print_frequency = 1

入力形式
^^^^^^^^^^^^
``keyword = value`` の形式でキーワードとその値を指定します.
また, #をつけることでコメントを入力することができます(それ以降の文字は無視されます).

キーワード
^^^^^^^^^^

- 温度に関する指定

    -  ``kTstart``

       **形式 :** float型 (>0)

       **説明 :**
       レプリカの温度の下限.

    -  ``kTend``

       **形式 :** float型 (>0)

       **説明 :**
       レプリカの温度の上限.


- レプリカに関する指定

    -  ``nprocs_per_replica``

       **形式 :** int型 (自然数)

       **説明 :** レプリカに対するプロセス数を指定します. デフォルト値 = 1.

    -  ``nreplicas``

       **形式 :** int型 (自然数)

       **説明 :** レプリカ数を指定します.


- その他

    -  ``nsteps``

       **形式 :** int型 (自然数)

       **説明 :** モンテカルロステップ数を指定します.

  
    -  ``RXtrial_frequency``

       **形式 :** int型 (自然数)

       **説明 :** レプリカ交換を何モンテカルロステップごとに行うかを指定します. 例えば、1に設定した場合にはモンテカルロ更新を行う度にレプリカ交換が行われ、2に設定した場合には2モンテカルロステップ毎にレプリカ交換が行われます. デフォルト値 = 1

    -  ``sample_frequency``

       **形式 :** int型 (自然数)

       **説明 :**     物理量測定を何モンテカルロステップごとに行うかを指定します. デフォルト値 = 1

    -  ``print_frequency``

       **形式 :** int型 (自然数)

       **説明 :**     測定した物理量を何モンテカルロステップごとに保存するかを指定します. デフォルト値 = 1

    -  ``reload``

       **形式 :** bool型 ("true" or "false")

       **説明 :**     前回終了したの最後のステップから計算をやりなおすかどうかを指定します. デフォルト値 = false


[sampling.solver] セクション
-------------------------------

ソルバーの種類 (VASP, QE, ...)、ソルバーへのパス、不変な入力ファイルのあるディレクトリなど（第一原理計算）ソルバーのパラメータを指定します.
以下のようなファイルフォーマットをしています.

  :: 
  
    [solver]
    type = 'vasp'
    path = './vasp'
    base_input_dir = './baseinput'
    perturb = 0.1
    run_scheme = 'mpi_spawn_ready'

入力形式
^^^^^^^^^^^^
``keyword = value`` の形式でキーワードとその値を指定します.
また, #をつけることでコメントを入力することができます(それ以降の文字は無視されます).

キーワード
^^^^^^^^^^

    -  ``type``

       **形式 :** str型

       **説明 :**
       ソルバーの種類(``OpenMX, QE, VASP, aenet`` )を指定します.

    -  ``path``

       **形式 :** str型

       **説明 :**
       ソルバーへのパスを指定します.

    -  ``base_input_dir``

       **形式 :** str型 or str型のリスト

       **説明 :** 
       ベースとなる入力ファイルへのパスを指定します.
       リスト形式で複数設定した場合は、各々の入力を使った計算が順番に実行されます. 2番目以降の計算では、前の計算の最終ステップでの構造が初期座標として用いられ, 最後の計算のエネルギーが使用されます. 例えば、1つ目の入力ファイルで精度を犠牲にして高速な構造最適化を行い、2番目以降の入力ファイルで高精度な設定で構造最適化を行うといったことが可能にります. あるいは、格子ベクトルの緩和を行う場合に、設定した平面波カットオフに基づいて計算メッシュをリセットするために同じ入力の計算を複数回実行するといったことも可能です.


    -  ``perturb``

       **形式 :** float型

       **説明 :**
       対称性が良い構造を入力にしてしまうと、構造最適化が鞍点で止まってしまいがちである。これを避けるため、各原子をこのパラメータに比例するようにランダムに変位させたものを初期構造とする。0.0あるいはfalseに設定することも可能. デフォルト値 = 0.0.

    - ``ignore_species``

       **形式 :** list型

       **説明 :**
       ``aenet`` などのニューラルネットワークモデルで「無視」する原子種を指定します. 常に占有率が1のものについては、ニューラルネットワークモデルの訓練および評価時に存在を無視した方が、計算効率が高くなります.

    -  ``run_scheme``

       **形式 :** str型

       **説明 :**
       ソルバーを起動する方法を指定します.
       詳細は :ref:`solver_specific_notes` を参照してください。       
       
    -  ``parallel_level`` (QuantumESPRESSO のみ)

       **形式 :** 辞書型

       **説明 :** 
       `Parallelization levels <https://www.quantum-espresso.org/Doc/user_guide/node18.html>`_ について、各level の並列数を指定します。
       長い形式のコマンドラインオプションから ``-`` を抜いたもの、すなわち、
       ``nimage``, ``npools``, ``nband``, ``ntg``, ``ndiag`` をキーとして、各level の分割数を値とする辞書として指定します。
       指定した要素のみ、実際のコマンドラインオプションとして ``pw.x`` に渡されます。

